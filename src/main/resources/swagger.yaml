openapi: 3.0.3
info:
  title: Anavu Store API
  description: API para gerenciamento da loja Anavu Store
  version: 1.0.0
  contact:
    name: Anavu Store
    email: contato@anavustore.com
    url: https://anavustore.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: '{protocol}:{url-base}/api/anavu/v1'
    variables:
      url-base:
        enum:
          -  //localhost:8080
        default: //localhost:8080
      protocol:
        enum:
          - http
          - https
        default: https
    description: Servidor de Desenvolvimento

paths:
  /login/register:
    post:
      operationId: register
      tags:
        - user-login
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserLoginRequest'
      responses:
        '201':
          description: Usuário criado com sucesso.
        '400':
          description: Dados inválidos fornecidos.
        '409':
          description: Usuário já existe.
  /products:
    get:
      tags:
        - products
      operationId: getProducts
      summary: Lista todos os produtos
      description: Retorna uma lista paginada de todos os produtos
      parameters:
        - name: page
          in: query
          description: Número da página (começa em 0)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Tamanho da página
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Lista de produtos retornada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPage'
    post:
      operationId: create
      tags:
        - products
      summary: Cria um novo produto
      description: Cria um novo produto no sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsRequest'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Dados inválidos fornecidos
  /products/{id}:
    get:
      tags:
        - products
      operationId: findById
      summary: Busca um produto por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Produto não encontrado
    put:
      operationId: update
      tags:
        - products
      summary: Atualiza um produto
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsRequest'
      responses:
        '200':
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Produto não encontrado  
    delete:
      operationId: delete
      tags:
        - products
      summary: Remove um produto
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Produto removido com sucesso
        '404':
          description: Produto não encontrado
components:

  schemas:
    CreateClientRequest:
      type: object
      required:
        - clientId
        - clientSecret
        - scopes
        - redirectUris
      properties:
        clientId:
          type: string
          example: "exemplo_client_id"
          minLength: 4
        clientSecret:
          type: string
          example: "exemplo_client_secret"
          minLength: 8
        scopes:
          type: array
          items:
            type: string
          example:
            - ADMIN
            - EMPLOYEE
            - CUSTOMER
            - USER

        redirectURI:
          type: string
          example: "http://localhost:8080/login"

    CreateUserLoginRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          example: "exemplo_username"
          minLength: 4
          maxLength: 12
        email:
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
          type: string
          example: "exemplo@exemplo.com"
        password:
          type: string
          example: "nao_use_senha123"
          minLength: 8
          maxLength: 32
        roles:
          type: array
          items:
            type: string
          example:
            - ADMIN
            - EMPLOYEE
            - CUSTOMER
            - USER

    ProductsRequest:
      type: object
      required:
        - name
        - price
        - category
      properties:
        name:
          type: string
          example: "Camiseta Básica"
        descricao:
          type: string
          example: "Camiseta 100% algodão"
        price:
          type: number
          format: double
          example: 59.90
        category:
          type: string
          example: "Vestuário"
        brand:
          type: string
          example: "Anavu"
        image:
          type: string
          example: "https://exemplo.com/imagem.jpg"
        active:
          type: boolean
          default: true

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Camiseta Básica"
        description:
          type: string
          example: "Camiseta 100% algodão"
        price:
          type: number
          format: double
          example: 59.90
        categoria:
          type: string
          example: "Vestuário"
        brand:
          type: string
          example: "Anavu"
        image:
          type: string
          example: "https://exemplo.com/imagem.jpg"
        active:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
        updateAt:
          type: string
          format: date-time

    ProductPage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        pageable:
          type: object
          properties:
            pageNumber:
              type: integer
              example: 0
            pageSize:
              type: integer
              example: 20
            totalElements:
              type: integer
              example: 100
            totalPages:
              type: integer
              example: 5
            last:
              type: boolean
              example: false