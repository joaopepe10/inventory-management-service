services:
  inventory-service-loja1:
    build: .
    container_name: inventory-management-loja1
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker-loja1
    depends_on:
      - rabbitmq-central
      - redis-loja1
      - db_inventory_loja1

  db_inventory_loja1:
    image: postgres:15
    container_name: postgres-db-loja1
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=inventory_db_loja1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis-loja1:
    image: redis:7
    container_name: "redis-loja1"
    ports:
      - "6381:6379"

  inventory-service-loja2:
    build: .
    container_name: inventory-management-loja2
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker-loja2
    depends_on:
      - rabbitmq-central
      - redis-loja2
      - db_inventory_loja2

  db_inventory_loja2:
    image: postgres:15
    container_name: postgres-db-loja2
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=inventory_db_loja2
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis-loja2:
    image: redis:7
    container_name: "redis-loja2"
    ports:
      - "6382:6379"

  # Servi√ßo RabbitMQ centralizado para ambas as lojas
  rabbitmq-central:
    image: "rabbitmq:management"
    container_name: "rabbit-central"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
